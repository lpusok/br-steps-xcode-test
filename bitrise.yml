format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_VERSION: 1.18.16

  - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
  - BITRISE_SCHEME: ios-simple-objc

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  ci:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - ci-objc_headless_mode
    - ci-xcode-8_headless_mode
    - ci-parallel_headless_mode
    - tvos_headless_mode
    - ci-objc
    - ci-xcode-8
    - ci-parallel
    - tvos
  
  xcode_8_ci: 
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - go-test:
    after_run:
    - ci-xcode-8_headless_mode
    - ci-xcode-8

  ci-objc_headless_mode:
    envs:
    # - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-simple-objc-with-uitest.git
    - SAMPLE_APP_URL: /Users/lpusok/Develop/go/src/github.com/bitrise-samples/sample-apps-ios-simple-objc-with-uitest
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - SIMULATOR_DEVICE: iPhone 6 Plus
    - SIMULATOR_PLATFORM: iOS Simulator
    - HEADLESS_MODE: "yes"
    after_run:
    - test
    - check_exported_artifacts

  ci-xcode-8_headless_mode:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ios-xcode-8.0.git
    - BITRISE_PROJECT_PATH: ios-xcode-8.0/ios-xcode-8.0.xcodeproj
    - BITRISE_SCHEME: ios-xcode-8.0
    - SIMULATOR_DEVICE: iPhone 6 Plus
    - SIMULATOR_PLATFORM: iOS Simulator
    - HEADLESS_MODE: "yes"
    after_run:
    - test

  tvos_headless_mode:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-tvos-swift.git
    - BITRISE_PROJECT_PATH: NPO Live.xcworkspace
    - BITRISE_SCHEME: NPO Live
    - SIMULATOR_DEVICE: Apple TV
    - SIMULATOR_PLATFORM: tvOS Simulator
    - HEADLESS_MODE: "yes"
    after_run:
    - test

  ci-parallel_headless_mode:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-swift-project-with-parallel-ui-test.git
    - BITRISE_PROJECT_PATH: BullsEye.xcodeproj
    - BITRISE_SCHEME: BullsEye
    - HEADLESS_MODE: "yes"
    after_run:
    - test

  ci-objc:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-simple-objc-with-uitest.git
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - SIMULATOR_DEVICE: iPhone 6 Plus
    - SIMULATOR_PLATFORM: iOS Simulator
    - HEADLESS_MODE: "no"
    after_run:
    - test
    - check_exported_artifacts

  ci-xcode-8:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ios-xcode-8.0.git
    - BITRISE_PROJECT_PATH: ios-xcode-8.0/ios-xcode-8.0.xcodeproj
    - BITRISE_SCHEME: ios-xcode-8.0
    - SIMULATOR_DEVICE: iPhone 6 Plus
    - SIMULATOR_PLATFORM: iOS Simulator
    - HEADLESS_MODE: "no"
    after_run:
    - test

  tvos:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-tvos-swift.git
    - BITRISE_PROJECT_PATH: NPO Live.xcworkspace
    - BITRISE_SCHEME: NPO Live
    - SIMULATOR_DEVICE: Apple TV
    - SIMULATOR_PLATFORM: tvOS Simulator
    - HEADLESS_MODE: "no"
    after_run:
    - test

  ci-parallel:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-swift-project-with-parallel-ui-test.git
    - BITRISE_PROJECT_PATH: BullsEye.xcodeproj
    - BITRISE_SCHEME: BullsEye
    - HEADLESS_MODE: "no"
    after_run:
    - test

  test:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -v
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -v
            # git clone $SAMPLE_APP_URL .
            cp -r $SAMPLE_APP_URL/* . 
    - certificate-and-profile-installer: {}
    - path::./:
        inputs:
        - output_tool: xcodebuild
        # - is_clean_build: "no"
        - is_clean_build: "yes"
        - generate_code_coverage_files: "no"
        - simulator_device: $SIMULATOR_DEVICE
        - simulator_platform: $SIMULATOR_PLATFORM
        - should_build_before_test: "yes"
        - xcodebuild_test_options: -verbose
        - export_uitest_artifacts: "true"
        - verbose: "yes"
        - headless_mode: $HEADLESS_MODE
    - script:
        title: Output test
        is_always_run: true
        inputs:
        - content: |-
            echo "BITRISE_XCODE_TEST_RESULT: ${BITRISE_XCODE_TEST_RESULT}"
            if [ ! -f "$BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH" ] ; then
              echo "No BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH file generated!"
              exit 1
            fi
            echo "BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH: ${BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH}"
            echo "BITRISE_XCODE_TEST_ATTACHMENTS_PATH: ${BITRISE_XCODE_TEST_ATTACHMENTS_PATH}"

  check_exported_artifacts:
    steps:
    - script:
        title: Exported attachment test
        is_always_run: true
        inputs:
        - content: |-
            #!/bin/bash
            set -e

            if [ ! -f $BITRISE_DEPLOY_DIR/ios-simple-objc-xc-test-Attachments.zip ]; then
                echo "Exported artifacts - ios-simple-objc-xc-test-Attachments.zip - not found in $BITRISE_DEPLOY_DIR"
                exit 1
            fi

            echo "Exported attachments found: $BITRISE_DEPLOY_DIR/ios-simple-objc-xc-test-Attachments.zip"


  # ----------------------------------------------------------------
  # --- Utility workflows

  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update
            
  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
